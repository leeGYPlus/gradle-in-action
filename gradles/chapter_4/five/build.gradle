
ext.versionFile = file('version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'

    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exit: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()

    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }

    new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

//


class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }


    @Override
    public String toString() {
        return "ProjectVersion{" +
                "major=" + major +
                ", minor=" + minor +
                ", release=" + release +
                '}';
    }
}

/**
 * 使用 task.addRule 替换以下两个 task 的工作。
 */

//task increaseMajorVersion(group:'versioning',description:'Increase The Major Version'){
//
//    doLast{
//        String currentVersion = version.toString()
//        ++version.major
//        String newVersion = version.toString()
//        logger.info "Increase the major project version: $currentVersion -> $newVersion"
//        // 使用 Ant task 的 propertyFile 来为属性文件中的指定属性设置值
//        ant.propertyfile(file:versionFile){
//            entry(key:'major',type:int,operation:'+',value:1)
//        }
//    }
//}
//
//task increaseMinorVersion(group:'versioning',description:'Increase The Major Version'){
//
//    doLast{
//        String currentVersion = version.toString()
//        ++version.minor
//        String newVersion = version.toString()
//        logger.info "Increase the major project version: $currentVersion -> $newVersion"
//        // 使用 Ant task 的 propertyFile 来为属性文件中的指定属性设置值
//        ant.propertyfile(file:versionFile){
//            entry(key:'minor',type:int,operation:'+',value:1)
//        }
//    }
//}

// 通过tasks.addRule ，使用 task 命名规则处理相关动作
tasks.addRule('increase the version'){ String taskName ->
    if(taskName.startsWith("increase")&& taskName.endsWith("Version")){
        task(taskName).doLast {
            String classifier = (taskName -'increase' - 'Version').toLowerCase()
            println "addRule $taskName is $classifier"
            String currentVersion = version.toString()
            switch (classifier){
                case 'major':++version.major
                    break
                case 'minor':++version.minor
                    break
                default:throw new GradleException("invalide version type")
            }

            String newVersion = version.toString()
            logger.info "Increase the major project version: $currentVersion -> $newVersion"
            // 使用 Ant task 的 propertyFile 来为属性文件中的指定属性设置值
            ant.propertyfile(file:versionFile){
                entry(key:classifier,type:int,operation:'+',value:1)
            }
        }
    }
}